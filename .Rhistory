hist(pp_df3$westmoreland, main='westmoreland', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='westmoreland'))$counts)
hist(pp_df3$lebanon, main='lebanon', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='lebanon'))$counts)
hist(pp_df3$beaver, main='beaver', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='beaver'))$counts)
hist(pp_df3$erie, main='erie', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='erie'))$counts)
pp_df2 <- matrix(0, ncol=nd, nrow=100)
for(i in 1:100){
b0 <- rnorm(n=1, mean=res2$summary.fixed[1, "mean"], sd=res2$summary.fixed[1, "sd"])
b1 <- rnorm(n=1, mean=res2$summary.fixed[2, "mean"], sd=res2$summary.fixed[2, "sd"])
u <- rnorm(n=nd,
mean=res2$summary.random$re_u[, "mean"],
sd=res2$summary.random$re_u[, "sd"])
v <- rnorm(n=nd,
mean=res2$summary.random$re_v[, "mean"],
sd=res2$summary.random$re_v[, "sd"])
pp_df2[2, ] <- rpois(n=nd, lambda=exp(b0 + b1 * pennLC.sf$smoking + u + v) * E)
}
pp_df2 <- data.frame(pp_df2)
colnames(pp_df2) <- pennLC.sf$county
head(pp_df2)
hist(pp_df2$centre, main='centre', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='centre'))$counts)
hist(pp_df2$monroe, main='monroe', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='monroe'))$counts)
hist(pp_df2$westmoreland, main='westmoreland', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='westmoreland'))$counts)
hist(pp_df2$lebanon, main='lebanon', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='lebanon'))$counts)
hist(pp_df2$beaver, main='beaver', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='beaver'))$counts)
hist(pp_df2$erie, main='erie', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='erie'))$counts)
res2$summary.fixe
res1$summary.fixe
res1$summary.random
res2$summary.random
res2$summary.random$re_v[, "mean"]
res1$summary.random$re_v[, "mean"]
pp_df2 <- matrix(0, ncol=nd, nrow=100)
for(i in 1:100){
b0 <- rnorm(n=1, mean=res2$summary.fixed[1, "mean"], sd=res2$summary.fixed[1, "sd"])
b1 <- rnorm(n=1, mean=res2$summary.fixed[2, "mean"], sd=res2$summary.fixed[2, "sd"])
u <- rnorm(n=nd,
mean=res2$summary.random$re_u[, "mean"],
sd=res2$summary.random$re_u[, "sd"])
v <- rnorm(n=nd,
mean=res2$summary.random$re_v[, "mean"],
sd=res2$summary.random$re_v[, "sd"])
pp_df2[i, ] <- rpois(n=nd, lambda=exp(b0 + b1 * pennLC.sf$smoking + u + v) * E)
}
pp_df2 <- data.frame(pp_df2)
colnames(pp_df2) <- pennLC.sf$county
head(pp_df2)
hist(pp_df2$centre, main='centre', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='centre'))$counts)
hist(pp_df2$monroe, main='monroe', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='monroe'))$counts)
hist(pp_df2$westmoreland, main='westmoreland', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='westmoreland'))$counts)
hist(pp_df2$lebanon, main='lebanon', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='lebanon'))$counts)
hist(pp_df2$beaver, main='beaver', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='beaver'))$counts)
hist(pp_df2$erie, main='erie', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='erie'))$counts)
tmap_mode("plot")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df1[1,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df1[2,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df1[3,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df1[4,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
tmap_mode("plot")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df2[1,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df2[2,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df2[3,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df2[4,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
tmap_mode("plot")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df3[1,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df3[2,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df3[3,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
pennLC_temp <- pennLC.sf %>% mutate(ppdraw=c(t(pp_df3[4,])))
tm_shape(pennLC_temp) +
tm_polygons("ppdraw")
df1 <- matrix(nrow=100, ncol=nd)
for(i in 1:100){
b0 <- rnorm(n=1, mean=0, sd=1)
b1 <- rnorm(n=1, mean=0, sd=1)
tau_nu <- rgamma(n=1, shape=1, scale=1)
tau_mu <- rgamma(n=1, shape=1, scale=1)
mu <- mvrnorm(n=1, mu=rep(0, nd), Sigma=diag(rep(1, nd)))
log_theta <- b0 + b1 * pennLC.sf$smoking +
get_mu(tau_mu, W, d$x, mu) + rnorm(n=nd, mean=0, sd=1/sqrt(tau_nu))
y <- rpois(n=nd, lambda=exp(log_theta) * E)
df1[i, ] <- y
}
df1 <- data.frame(df1)
colnames(df1) <- pennLC.sf$county
head(df1)
# the largest 20% are trimmed to avoid extreme values
v <- sort(df1$centre, TRUE)[20:100]
hist(v[v <= 10000], main='centre', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='centre'))$counts)
v <- sort(df1$monroe, TRUE)[20:100]
hist(v[v <= 10000], main='monroe', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='monroe'))$counts)
v <- sort(df1$westmoreland)[20:100]
hist(v[v <= 10000], main='westmoreland', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='westmoreland'))$counts)
v <- sort(df1$lebanon, TRUE)[20:100]
hist(v[v <= 10000], main='lebanon', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='lebanon'))$counts)
v <- sort(df1$beaver, TRUE)[20:100]
hist(v[v <= 10000], main='beaver', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='beaver'))$counts)
v <- sort(df1$erie, TRUE)[20:100]
hist(v[v <= 10000], main='erie', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='erie'))$counts)
df2 <- matrix(nrow=100, ncol=nd)
for(i in 1:100){
b0 <- rnorm(n=1, mean=0, sd=100)
b1 <- rnorm(n=1, mean=0, sd=100)
tau_nu <- rgamma(n=1, shape=0.1, scale=0.1)
tau_mu <- rgamma(n=1, shape=0.1, scale=0.1)
mu <- mvrnorm(n=1, mu=rep(0, nd), Sigma=diag(rep(1, nd)))
log_theta <- b0 + b1 * pennLC.sf$smoking +
get_mu(tau_mu, W, d$x, mu) + rnorm(n=nd, mean=0, sd=1/sqrt(tau_nu))
y <- rpois(n=nd, lambda=exp(log_theta) * E)
df2[i, ] <- y
}
# This is not a good prior since tau_mu tends to yield extreme log_theta.
# Many draws are infinitely large.
df2 <- data.frame(df2)
colnames(df2) <- pennLC.sf$county
head(df2)
hist(df2$centre, main='centre', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='centre'))$counts)
hist(df2$monroe, main='monroe', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='monroe'))$counts)
hist(df2$westmoreland, main='westmoreland', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='westmoreland'))$counts)
hist(df2$lebanon, main='lebanon', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='lebanon'))$counts)
hist(df2$beaver, main='beaver', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='beaver'))$counts)
hist(df2$erie, main='erie', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='erie'))$counts)
df1 <- matrix(nrow=100, ncol=nd)
for(i in 1:100){
b0 <- rnorm(n=1, mean=0, sd=1)
b1 <- rnorm(n=1, mean=0, sd=1)
tau_nu <- rgamma(n=1, shape=1, scale=1)
tau_mu <- rgamma(n=1, shape=1, scale=1)
mu <- mvrnorm(n=1, mu=rep(0, nd), Sigma=diag(rep(1, nd)))
log_theta <- b0 + b1 * pennLC.sf$smoking +
get_mu(tau_mu, W, d$x, mu) + rnorm(n=nd, mean=0, sd=1/tau_nu)
y <- rpois(n=nd, lambda=exp(log_theta) * E)
df1[i, ] <- y
}
df1 <- data.frame(df1)
colnames(df1) <- pennLC.sf$county
head(df1)
# the largest 20% are trimmed to avoid extreme values
v <- sort(df1$centre, TRUE)[20:100]
hist(v[v <= 10000], main='centre', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='centre'))$counts)
v <- sort(df1$monroe, TRUE)[20:100]
hist(v[v <= 10000], main='monroe', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='monroe'))$counts)
v <- sort(df1$westmoreland)[20:100]
hist(v[v <= 10000], main='westmoreland', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='westmoreland'))$counts)
v <- sort(df1$lebanon, TRUE)[20:100]
hist(v[v <= 10000], main='lebanon', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='lebanon'))$counts)
v <- sort(df1$beaver, TRUE)[20:100]
hist(v[v <= 10000], main='beaver', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='beaver'))$counts)
v <- sort(df1$erie, TRUE)[20:100]
hist(v[v <= 10000], main='erie', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='erie'))$counts)
df2 <- matrix(nrow=100, ncol=nd)
for(i in 1:100){
b0 <- rnorm(n=1, mean=0, sd=100)
b1 <- rnorm(n=1, mean=0, sd=100)
tau_nu <- rgamma(n=1, shape=0.1, scale=0.1)
tau_mu <- rgamma(n=1, shape=0.1, scale=0.1)
mu <- mvrnorm(n=1, mu=rep(0, nd), Sigma=diag(rep(1, nd)))
log_theta <- b0 + b1 * pennLC.sf$smoking +
get_mu(tau_mu, W, d$x, mu) + rnorm(n=nd, mean=0, sd=1/tau_nu)
y <- rpois(n=nd, lambda=exp(log_theta) * E)
df2[i, ] <- y
}
# This is not a good prior since tau_mu tends to yield extreme log_theta.
# Many draws are infinitely large.
df2 <- data.frame(df2)
colnames(df2) <- pennLC.sf$county
head(df2)
hist(df2$centre, main='centre', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='centre'))$counts)
hist(df2$monroe, main='monroe', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='monroe'))$counts)
hist(df2$westmoreland, main='westmoreland', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='westmoreland'))$counts)
hist(df2$lebanon, main='lebanon', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='lebanon'))$counts)
hist(df2$beaver, main='beaver', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='beaver'))$counts)
hist(df2$erie, main='erie', xlab='y')
abline(v=(pennLC.sf %>% filter(county=='erie'))$counts)
rnorm(n=nd, mean=0, sd=1/tau_nu)
rnorm(n=nd, mean=0, sd=1/\sqrt(tau_nu))
rnorm(n=nd, mean=0, sd=1/sqrt(tau_nu))
b0 + b1 * pennLC.sf$smoking +
get_mu(tau_mu, W, d$x, mu)
rgamma(n=1, shape=0.1, scale=0.1)
rgamma(n=1, shape=0.1, scale=0.1)
rgamma(n=1, shape=0.1, scale=0.1)
rgamma(n=1, shape=0.1, scale=0.1)
rgamma(n=1, shape=0.1, scale=0.1)
rgamma(n=1, shape=0.1, scale=0.1)
rgamma(n=1, shape=0.1, scale=0.1)
getwd()
read.csv('../Downloads/LDS_C02_NCBIRTH800.csv')
data=read.csv('../Downloads/LDS_C02_NCBIRTH800.csv')
View(data)
libray(dlpyr)
libray(dplyr)
libray(dyplr)
library(dplyr)
data %>% filter(smoke==0) %>% mean(tounces)
data %>% filter(smoke==0) %>% summary()
data %>% filter(smoke==0) %>% summarise(mean=mean(tounces))
data %>% filter(smoke==0) %>% summarise(mean=median(tounces))
median(data[data$smoke==0, ]$tgrams)
data[data$smoke==0]
data[data$smoke==0,]
data[data$smoke==0,]$tgrams
median(data[data$smoke==0,]$tgrams)
data %>% filter(smoke==0) %>% summarise(mean=median(tgrams))
data %>% filter(smoke==0) %>% summarise(median=median(tgrams))
data %>% filter(smoke==0 & is.na(tgrams))
is.na(data$tgrams)
median(data$tgrams[data$smoke==0])
mean(data$tgrams[data$smoke==0])
data$tgrams[data$smoke==0]
data$tgrams
data$tgrams==0
data$smoke==0
data$tgrams[data$smoke==0]
nosmoke=data$smoke==0
data$tgrams[nosmoke]
nosmoke
data %>% group_by(premie) $>$ summarise(mean=mean(tgrams))
data %>% group_by(premie) $>$ summarise(mean=mean(tgrams))
data %>% summary()
data %>% group_by(premie)
data %>% group_by(premie) %>% summarise(mean=mean(grams))
data %>% group_by(premie) %>% summarise(mean=mean(tgrams))
data %>% group_by(premie) %>% summarise(mean=mean(tgrams)) %>% diff()
data %>% group_by(premie) %>% summarise(mean=mean(tgrams)) %>% pull(mean)
data %>% group_by(premie) %>% summarise(mean=mean(tgrams)) %>% pull(mean)
3407.293-2478.034
data$smoke==0 && data$drink==0
data$smoke==0 & data$drink==0
data[data$smoke==0 & data$drink==1,]
data[data$smoke==0 && data$drink==1,]
data$smoke==0 && data$drink==1
data$smoke==0 & data$drink==1
data %>% filter(smoke==0 & drink==1)
data %>% filter(smoke==0)
data %>% filter(smoke==0) %>% filter(drink==1)
data %>% filter(drink==1) & filter(smoke==0)
data %>% filter(drink==1) %>% filter(smoke==0)
data$smoke==0 & data$drink==1
data$smoke==0
data$drink==1
data$smoke[is.na(data$smoke==1)]
data$smoke[is.na(data$smoke==1)]
is.na(data$smoke==1)
is.na(data$smoke==1)
length(data)
dim(data)
1:80
c(1:80)
c(1:800)[is.na(data$smoke==1)]
data[327,]
data[602,]
unique(racemom)
unique(data$racemom)
data %>% filter(racemom==3)
data %>% filter(racemom==3) %>% nrow()
data %>% filter(racemom==3) %>% nrow() / 800
sd(data$mag) / mean(data$mage)
data %>% filter(smoke==0) %>% summary()
data %>% filter(smoke==0) %>% summarise(m=medians(tgrams))
data %>% filter(smoke==0) %>% summarise(m=median(tgrams))
x = c(14.5, 12.9, 14, 16.1, 12, 17.5, 14.1, 12.9, 17.9, 12, 16.4, 24.2, 12.2, 14.4, 17, 10, 18.5, 10.8, 16.2, 14.9)
sd(x)
help(sd)
length(x)
sd(x)/sqrt(20)
mean(x)+sd(x)/sqrt(20)
mean(x)+2*sd(x)/sqrt(20)
mean(x)-2*sd(x)/sqrt(20)
qnorm(0.95)
mean(x)+qnorm(0.95)*sd(x)/sqrt(20)
mean(x)+qnorm(0.975)*sd(x)/sqrt(20)
mean(x)
mean(x)-qnorm(0.975)*sd(x)/sqrt(20)
boxplot
boxplot(x)
source('C:/Users/User/Downloads/sta302.R')
ans(78.46,103.25,15.68,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
source('C:/Users/User/Downloads/sta302.R')
ans(78.46,103.25,15.68,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(78.46,103.25,15.68,21,0.95)
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
source('C:/Users/User/Downloads/sta302.R')
source('C:/Users/User/Downloads/sta302.R')
ans(100.86, 120.54,16.46,21,0.95)
ans(100.86, 120.54,16.46,21,0.95,1.985,3)
ans(81.68, 98.84,15.39,21,0.95,6,924,3)
ans(81.68, 98.84,15.39,21,0.95,6.924,3)
ans(71.35,127.92,16.04,22,0.9,3.656,2)
ans(76.62, 143.10,13.96,22,0.9,7.73,2)
ans(70.41, 136.14,18.09,21,0.9,3.085,3)
ans(97.99, 129.15,11.43,22,0.8,17.86,2)
ans(89.41, 131.84,15.06,21,0.8,3.737,3)
ans(71.27, 120.30,17.75,22,0.8,4.711,2)
install.packages('torch')
install.packages("torch")
library(torch)
l <- nn_linear(3, 1)
l
l$parameters
source('~/GitHub/population_model/mfc.R')
plot(obj, size=1)
plot(obj, type='p')
plot(obj, type='l')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
plot(obj, type='l')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
1:5:2
seq(5,2)
200 * (1:nt) / nt
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
p
pt
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
1
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
optimizer$state
optimizer$state()
optimizer$state_dict()
lr_step
source('~/GitHub/population_model/mfc.R')
scheduler
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
scheduler
source('~/GitHub/population_model/mfc.R')
scheduler
optimizer
optimizer
scheduler
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
optimizer
optimizer$param_groups
source('~/GitHub/population_model/mfc.R')
optimizer$param_groups
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
scheduler
optimizer
optimizer$param_groups
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
source('~/GitHub/population_model/mfc.R')
